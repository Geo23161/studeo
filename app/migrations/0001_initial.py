# Generated by Django 4.2.7 on 2024-03-01 09:44

import cloudinary.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('prenom', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
                ('quart', models.TextField(blank=True, null=True)),
                ('annee', models.CharField(blank=True, max_length=150, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last', models.DateTimeField(blank=True, default=datetime.datetime(2024, 3, 1, 9, 44, 56, 254494, tzinfo=datetime.timezone.utc), null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Annee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('slug', models.CharField(blank=True, max_length=150, null=True)),
                ('niv', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('size', models.IntegerField(default=60)),
            ],
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('slug', models.CharField(blank=True, max_length=150, null=True)),
                ('niv', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='images/')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('slug', models.CharField(blank=True, max_length=150, null=True)),
                ('niv', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='QaN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=150, null=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeFic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('slug', models.CharField(blank=True, max_length=150, null=True)),
                ('niv', models.IntegerField(default=0)),
                ('format_of', models.CharField(default='fichiers', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('preview', models.ImageField(upload_to='images/videos/')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Aides',
            fields=[
                ('qan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.qan')),
                ('text', models.TextField(blank=True, null=True)),
                ('solved', models.BooleanField(default=False)),
                ('seen', models.BooleanField(default=False)),
                ('annee', models.ManyToManyField(blank=True, null=True, related_name='aides', to='app.annee')),
                ('audio', models.ManyToManyField(blank=True, null=True, related_name='aides', to='app.audio')),
                ('image', models.ManyToManyField(blank=True, null=True, related_name='aides', to='app.image')),
                ('matiere', models.ManyToManyField(blank=True, null=True, related_name='aides', to='app.matiere')),
                ('typefic', models.ManyToManyField(blank=True, null=True, related_name='aides', to='app.typefic')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maides', to=settings.AUTH_USER_MODEL)),
                ('video', models.ManyToManyField(blank=True, null=True, related_name='aides', to='app.video')),
                ('views', models.ManyToManyField(related_name='aides', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('app.qan',),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionId', models.CharField(blank=True, max_length=150, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.IntegerField(default=2500)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pays', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='for_news', to='app.image')),
                ('seen', models.ManyToManyField(related_name='has_seens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type_of', models.CharField(default='waiter', max_length=150)),
                ('audio', models.ManyToManyField(blank=True, null=True, to='app.audio')),
                ('image', models.ManyToManyField(blank=True, null=True, to='app.image')),
                ('video', models.ManyToManyField(blank=True, null=True, to='app.video')),
            ],
        ),
        migrations.CreateModel(
            name='Abon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('state', models.BooleanField(default=True)),
                ('pay', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='abn', to='app.payment')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abons', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fichiers',
            fields=[
                ('qan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.qan')),
                ('text', models.TextField(blank=True, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('annee', models.ManyToManyField(blank=True, null=True, related_name='fics', to='app.annee')),
                ('audio', models.ManyToManyField(blank=True, null=True, related_name='fics', to='app.audio')),
                ('image', models.ManyToManyField(blank=True, null=True, related_name='fics', to='app.image')),
                ('matiere', models.ManyToManyField(blank=True, null=True, related_name='fics', to='app.matiere')),
                ('typefic', models.ManyToManyField(blank=True, null=True, related_name='fics', to='app.typefic')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mfics', to=settings.AUTH_USER_MODEL)),
                ('video', models.ManyToManyField(blank=True, null=True, related_name='fics', to='app.video')),
                ('views', models.ManyToManyField(related_name='fichiers', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('app.qan',),
        ),
        migrations.CreateModel(
            name='Conseils',
            fields=[
                ('qan_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.qan')),
                ('text', models.TextField(blank=True, null=True)),
                ('solved', models.BooleanField(default=False)),
                ('seen', models.BooleanField(default=False)),
                ('annee', models.ManyToManyField(blank=True, null=True, related_name='conseils', to='app.annee')),
                ('audio', models.ManyToManyField(blank=True, null=True, related_name='conseils', to='app.audio')),
                ('image', models.ManyToManyField(blank=True, null=True, related_name='conseils', to='app.image')),
                ('matiere', models.ManyToManyField(blank=True, null=True, related_name='conseils', to='app.matiere')),
                ('typefic', models.ManyToManyField(blank=True, null=True, related_name='conseils', to='app.typefic')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mconseils', to=settings.AUTH_USER_MODEL)),
                ('video', models.ManyToManyField(blank=True, null=True, related_name='conseils', to='app.video')),
                ('views', models.ManyToManyField(related_name='conseils', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('app.qan',),
        ),
        migrations.CreateModel(
            name='AnswerConseil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type_of', models.CharField(default='waiter', max_length=150)),
                ('audio', models.ManyToManyField(blank=True, null=True, to='app.audio')),
                ('image', models.ManyToManyField(blank=True, null=True, to='app.image')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers_conseils', to=settings.AUTH_USER_MODEL)),
                ('video', models.ManyToManyField(blank=True, null=True, to='app.video')),
                ('conseil', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='app.conseils')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerAides',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type_of', models.CharField(default='waiter', max_length=150)),
                ('audio', models.ManyToManyField(blank=True, null=True, to='app.audio')),
                ('image', models.ManyToManyField(blank=True, null=True, to='app.image')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers_aides', to=settings.AUTH_USER_MODEL)),
                ('video', models.ManyToManyField(blank=True, null=True, to='app.video')),
                ('aide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='app.aides')),
            ],
        ),
    ]
